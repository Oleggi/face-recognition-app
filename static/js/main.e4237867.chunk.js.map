{"version":3,"sources":["components/Login/Login.module.css","components/RankInfo/RankInfo.module.css","components/ImageInput/ImageInput.module.css","components/Logo/brain-upper-view-outline.png","components/Header/Header.module.css","components/FaceRecognition/FaceRecognition.module.css","components/Login/Login.jsx","components/Register/Register.jsx","components/RankInfo/RankInfo.jsx","components/ImageInput/ImageInput.jsx","components/FaceRecognition/FaceRecognition.jsx","components/Navigation/Navigation.jsx","components/Logo/Logo.jsx","components/Header/Header.jsx","api/api.js","components/MainPageContainer/MainPageContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","className","style","form_container","for","type","id","placeholder","required","autofocus","value","to","Register","action","RankInfo","props","container","ImageInput","inputData","onInputChange","onButtonSubmit","aria-label","aria-describedby","onChange","onClick","FaceRecognition","imageUrl","squareCoords","isFetching","boxPosition","top","left","right","bottom","preloader","lds_spinner","img_wrapper","src","alt","bounding_box","Navigation","toggleIsAuth","isAuth","nav","tiltOptions","reverse","max","perspective","scale","speed","transition","axis","reset","easing","tiltStyles","height","width","Logo","logo","tilt","options","logoImg","Header","app","Clarifai","App","apiKey","clarifaiAPI","models","predict","FACE_DETECT_MODEL","then","response","outputs","data","regions","region_info","err","console","log","MainPageContainer","setState","setSquareCoords","toggleIsFetching","getSquareCoords","image","document","getElementById","Number","top_row","left_col","right_col","bottom_row","e","input","target","state","this","React","Component","particlesConfig","particles","number","density","enable","value_area","params","exact","path","render","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e4237867.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_container\":\"Login_form_container__1av_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RankInfo_container__WCO5P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ImageInput_container__dmqnU\"};","module.exports = __webpack_public_path__ + \"static/media/brain-upper-view-outline.87466cd4.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__T40ot\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FaceRecognition_container__2u2AB\",\"img_wrapper\":\"FaceRecognition_img_wrapper__O0g66\",\"bounding_box\":\"FaceRecognition_bounding_box__1a454\",\"preloader_wrap\":\"FaceRecognition_preloader_wrap__1z9xL\",\"lds_spinner\":\"FaceRecognition_lds_spinner__3gV7Y\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport style from \"./Login.module.css\";\r\n// import style from \"./RankInfo.module.css\";\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div className={style.form_container}>\r\n      <form className=\"form-signin\">\r\n      <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n      <label for=\"inputEmail\" className=\"sr-only\">Email address</label>\r\n      <input type=\"email\" id=\"inputEmail\" className=\"form-control\" placeholder=\"Email address\" required=\"\" autofocus=\"\" />\r\n      <label for=\"inputPassword\" className=\"sr-only\">Password</label>\r\n      <input type=\"password\" id=\"inputPassword\" className=\"form-control\" placeholder=\"Password\" required=\"\" />\r\n      <div className=\"checkbox mb-3\">\r\n        <label>\r\n          <input type=\"checkbox\" value=\"remember-me\" /> Remember me\r\n        </label>\r\n      </div>\r\n      <NavLink to={'/main'}>\r\n          <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n          </NavLink>\r\n    </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\nconst testFunc = (string) => {\r\n  let evenNums = [];\r\n   for(let i = 1; i <= string.length; i++) {\r\n    if(!(i % 2)) {\r\n      evenNums = evenNums.push(string[i]);\r\n    }\r\n  }\r\n  console.log(evenNums); \r\n};\r\n","import React from \"react\";\r\n// import style from \"./RankInfo.module.css\";\r\n\r\nconst Register = () => {\r\n  return (\r\n    <div>\r\n        Register\r\n      <form action=\"\">\r\n          <input type=\"text\"/>\r\n          <input type=\"text\"/>\r\n          <button>Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport style from \"./RankInfo.module.css\";\r\n\r\nconst RankInfo = (props) => {\r\n  return (\r\n    <div className={style.container}>\r\n      <h2>\r\n          Your rank is {'#5'}\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankInfo;\r\n","import React from \"react\";\r\nimport style from \"./ImageInput.module.css\";\r\n\r\nconst ImageInput = ({ inputData, onInputChange, onButtonSubmit }) => {\r\n  return (\r\n    <div className={style.container}>\r\n      <div className=\"input-group mb-3\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Image link\"\r\n          aria-label=\"Image link\"\r\n          aria-describedby=\"button-addon2\"\r\n          value={inputData}\r\n          onChange={onInputChange}\r\n        />\r\n        <div className=\"input-group-append\">\r\n          <button\r\n            className=\"btn btn-outline-light\"\r\n            type=\"button\"\r\n            id=\"button-addon2\"\r\n            onClick={onButtonSubmit}\r\n          >\r\n            Detect\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageInput;\r\n","import React from \"react\";\r\nimport style from \"./FaceRecognition.module.css\";\r\n\r\nconst FaceRecognition = ({ imageUrl, squareCoords, isFetching }) => {\r\n  const { top, left, right, bottom } = squareCoords;\r\n  const boxPosition = { top: top, left: left, right: right, bottom: bottom };\r\n  const preloader = (\r\n    <div style={boxPosition} className={style.lds_spinner}>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.img_wrapper}>\r\n        <img id=\"faceImg\" src={imageUrl} alt=\"\" />\r\n        {isFetching ? preloader : (\r\n          <div style={boxPosition} className={style.bounding_box}></div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FaceRecognition;\r\n","import React from 'react';\r\nimport style from \"../Header/Header.module.css\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navigation = ({ toggleIsAuth, isAuth }) => {\r\n    return (\r\n        <div className={style.nav}>\r\n            <NavLink to={'/login'}>\r\n                {isAuth ? (\r\n                    <button onClick={toggleIsAuth} type=\"button\" className=\"btn btn-primary\">Sign Out</button>\r\n                ) :\r\n                (\r\n                    <div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">Sign in</button>\r\n                        <button type=\"button\" className=\"btn btn-primary\">Register</button>\r\n                    </div>\r\n                )\r\n            }\r\n            </NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport style from \"../Header/Header.module.css\";\r\nimport logoImg from './brain-upper-view-outline.png'; \r\n\r\nconst tiltOptions = {\r\n    reverse:        false,  // reverse the tilt direction\r\n    max:            35,     // max tilt rotation (degrees)\r\n    perspective:    1000,   // Transform perspective, the lower the more extreme the tilt gets.\r\n    scale:          1,      // 2 = 200%, 1.5 = 150%, etc..\r\n    speed:          300,    // Speed of the enter/exit transition\r\n    transition:     true,   // Set a transition on enter/exit.\r\n    axis:           null,   // What axis should be disabled. Can be X or Y.\r\n    reset:          true,    // If the tilt effect has to be reset on exit.\r\n    easing:         \"cubic-bezier(.03,.98,.52,.99)\",    // Easing on enter/exit.\r\n}\r\n\r\nconst tiltStyles = {\r\n  height: 170,\r\n  width: 170,\r\n}\r\n\r\nconst Logo = (props) => {\r\n  return (\r\n    <div className={style.logo}>\r\n      <Tilt\r\n        className={style.tilt}\r\n        options={tiltOptions}\r\n        style={tiltStyles}\r\n      >\r\n        <div className=\"Tilt-inner\"><img src={logoImg} alt=\"logo\"/></div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport style from './Header.module.css';\r\nimport Navigatin from '../Navigation/Navigation';\r\nimport Logo from '../Logo/Logo';\r\n\r\nconst Header = ({ toggleIsAuth, isAuth }) => {\r\n    return (\r\n        <header className={style.container}>\r\n            <Logo />\r\n            <Navigatin isAuth={isAuth}/>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import Clarifai from \"clarifai\";\r\n\r\nconst app = new Clarifai.App({\r\n  apiKey: \"c69e928a6db04595b20c5558cc601034\",\r\n});\r\n\r\nexport const clarifaiAPI = {\r\n  getRecognitionData(imageUrl) {\r\n    return app.models.predict(Clarifai.FACE_DETECT_MODEL, imageUrl)\r\n      .then((response) => {\r\n        return response.outputs[0].data.regions[0].region_info.bounding_box;\r\n      },\r\n\r\n      function (err) {\r\n        console.log(err);\r\n      }\r\n    );\r\n  },\r\n};\r\n","import React from 'react';\r\nimport RankInfo from '../RankInfo/RankInfo';\r\nimport ImageInput from '../ImageInput/ImageInput';\r\nimport FaceRecognition from '../FaceRecognition/FaceRecognition';\r\nimport Header from '../Header/Header';\r\nimport {clarifaiAPI} from '../../api/api';\r\n\r\nclass MainPageContainer extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          isFetching: null,\r\n          input: '',\r\n          imageUrl: '',\r\n          squareCoords: {},\r\n          isAuth: null\r\n        };\r\n      };\r\n\r\n      toggleIsAuth = (isAuth) => {\r\n        this.setState({\r\n            isAuth\r\n        })  \r\n      };\r\n  \r\n      setSquareCoords = (squareCoords) => {\r\n        this.setState({\r\n          squareCoords \r\n        })\r\n      };\r\n  \r\n      toggleIsFetching = (isFetching) => {\r\n          this.setState({\r\n            isFetching\r\n          })\r\n      };\r\n      \r\n      getSquareCoords = (data) => {\r\n        const image = document.getElementById('faceImg');\r\n        const width = Number(image.width);\r\n        const height = Number(image.height);\r\n           const squareCoords = {\r\n            top: (data.top_row * height),\r\n            left: (data.left_col * width),\r\n            right: (width - (data.right_col * width)),\r\n            bottom: (height - (data.bottom_row * height)),\r\n          }\r\n        return squareCoords;\r\n      };\r\n  \r\n      onInputChange = (e) => {\r\n        this.setState({\r\n          input: e.target.value\r\n        })\r\n      };\r\n  \r\n      onButtonSubmit = () => {\r\n        this.setState({\r\n          imageUrl: this.state.input,\r\n          input: \"\"\r\n        });\r\n        this.toggleIsFetching(true);\r\n        clarifaiAPI.getRecognitionData(this.state.input)\r\n          .then(data => {\r\n           this.setSquareCoords(this.getSquareCoords(data));\r\n           if (data) {\r\n            this.toggleIsFetching(false);\r\n           }\r\n          });\r\n      };\r\n      \r\n      render () {\r\n        return (\r\n            <>\r\n            <Header isAuth={this.state.isAuth} toggleIsAuth={() => this.toggleIsAuth(true)}/>\r\n            <RankInfo />\r\n            <ImageInput inputData={this.state.input} onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\r\n            <FaceRecognition isFetching={this.state.isFetching} squareCoords={this.state.squareCoords} imageUrl={this.state.imageUrl}/>\r\n            </>           \r\n             )\r\n    }\r\n\r\n};\r\n\r\nexport default MainPageContainer;","import React from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport MainPageContainer from './components/MainPageContainer/MainPageContainer';\n\nconst particlesConfig = {\n        particles : {\n          number: {\n            value: 35,\n            density: {\n              enable: true,\n              value_area: 800\n            }\n          }\n        }\n    }\n\nclass App extends React.Component {\n render () {\n  return (\n    <div className='App'>\n      <Particles params={particlesConfig} className='particles' />\n      <Switch>\n        <Route exact path=\"/\" render={() => {return <Redirect to={'/main'} />}} />\n        <Route path=\"/login\" render={Login} />\n        <Route path=\"/register\" render={Register} />\n        <Route path=\"/main\" component={MainPageContainer} />\n      </Switch>\n    </div>\n  );\n }\n    }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}